type InitiateWithdraw @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  shares: BigInt! # uint256
  round: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type InstantWithdraw @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  amount: BigInt! # uint256
  round: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Redeem @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  share: BigInt! # uint256
  round: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdraw @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  amount: BigInt! # uint256
  shares: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  spender: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CinchPerformanceFeePercentageUpdated @entity(immutable: true) {
  id: Bytes!
  feePercentage: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DepositPaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DepositUnpaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DepositWithReferral @entity(immutable: true) {
  id: Bytes!
  caller: Bytes! # address
  receiver: Bytes! # address
  assets: BigInt! # uint256
  shares: BigInt! # uint256
  referral: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Initialized @entity(immutable: true) {
  id: Bytes!
  version: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RevenueShareVaultRibbonEarnRedeem @entity(immutable: true) {
  id: Bytes!
  caller: Bytes! # address
  receiver: Bytes! # address
  sharesOwner: Bytes! # address
  assets: BigInt! # uint256
  shares: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RedeemWithReferral @entity(immutable: true) {
  id: Bytes!
  caller: Bytes! # address
  receiver: Bytes! # address
  sharesOwner: Bytes! # address
  assets: BigInt! # uint256
  shares: BigInt! # uint256
  referral: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RevenueShareBalanceByAssetReferralUpdated @entity(immutable: true) {
  id: Bytes!
  asset_: Bytes! # address
  referral: Bytes! # address
  shares_: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RevenueShareDeposited @entity(immutable: true) {
  id: Bytes!
  assetsFrom: Bytes! # address
  asset: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RevenueShareReferralAdded @entity(immutable: true) {
  id: Bytes!
  referral: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RevenueShareReferralRemoved @entity(immutable: true) {
  id: Bytes!
  referral: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RevenueShareWithdrawn @entity(immutable: true) {
  id: Bytes!
  asset: Bytes! # address
  amount: BigInt! # uint256
  referral: Bytes! # address
  receiver: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TotalSharesByUserReferralUpdated @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  referral: Bytes! # address
  shares_: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type YieldSourceVaultUpdated @entity(immutable: true) {
  id: Bytes!
  yieldSourceVault_: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
